# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - # "Note: the 'AZURE_SP' secret is required to be added into GitHub Secrets. See this blog post for details: https://samlearnsazure.blog/2019/12/13/github-actions/"
      name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SP }}
        
    - uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: "${{ secrets.KeyVault_Dev }}" # name of key vault in Azure portal
        secrets: 'AzureAd-TenantId,AzureAd-Authority,AzureAd-ClientId,AzureAd-Audiance,AzureAd-RedirectUrl,AzureAd-LoginUrl,Apim-BaseUrl'  # comma separated list of secret keys to fetch from key vault 
      id: myGetSecretAction # ID for secrets that you will reference
      


    - name: Find and Replace User Name - Using Build Variable
      run: |
        find SDR-WebApp/src/environments/environment.ts -type f -exec sed -i ''s@{#AzureAd-TenantId#}@'${{ steps.myGetSecretAction.outputs.AzureAd-TenantId }}'@g'' {} \;
        find SDR-WebApp/src/environments/environment.ts -type f -exec sed -i ''s@{#AzureAd-Authority#}@'${{ steps.myGetSecretAction.outputs.AzureAd-Authority }}'@g'' {} \;
        find SDR-WebApp/src/environments/environment.ts -type f -exec sed -i ''s@{#AzureAd-ClientId#}@'${{ steps.myGetSecretAction.outputs.AzureAd-ClientId }}'@g'' {} \;
        find SDR-WebApp/src/environments/environment.ts -type f -exec sed -i ''s@{#AzureAd-Audiance#}@'${{ steps.myGetSecretAction.outputs.AzureAd-Audiance }}'@g'' {} \;
        find SDR-WebApp/src/environments/environment.ts -type f -exec sed -i ''s@{#AzureAd-RedirectUrl#}@'${{ steps.myGetSecretAction.outputs.AzureAd-RedirectUrl }}'@g'' {} \;
        find SDR-WebApp/src/environments/environment.ts -type f -exec sed -i ''s@{#AzureAd-LoginUrl#}@'${{ steps.myGetSecretAction.outputs.AzureAd-LoginUrl }}'@g'' {} \;
        find SDR-WebApp/src/environments/environment.ts -type f -exec sed -i ''s@{#Apim-BaseUrl#}@'${{ steps.myGetSecretAction.outputs.Apim-BaseUrl }}'@g'' {} \;
        find SDR-WebApp/src/environments/environment.ts -type f -exec sed -i ''s@{#Apim-SubscriptionKey#}@'${{ steps.myGetSecretAction.outputs.Apim-SubscriptionKey }}'@g'' {} \;
        
    - uses: actions/checkout@v2
    - name: Use Node 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
        
    - name: npm cli
      run: |
         cd ${{ github.workspace }}/SDR-WebApp/
         npm install -g @angular/cli@13.0.3
         npm install @angular-devkit/build-angular
         npm install @materia-ui/ngx-monaco-editor
         npm install typescript@4.4.4
    
     

  
    - name: npm install
      run: |
         cd ${{ github.workspace }}/SDR-WebApp/
         npm install SDR-WebApp
         
    - name: npm update
      run: |
         cd ${{ github.workspace }}/SDR-WebApp/
         npm update SDR-WebApp
      
    - name: Build dev2
      run: |
          cd ${{ github.workspace }}/SDR-WebApp/
          ng build
         
         
    - name: 'Copy Files to: ${{ github.workspace }}'
      run: |
       cp '${{ github.workspace }}\SDR-WebApp\dist\SDR-WebApp\**' '${{ github.workspace }}'
       cd ${{ github.workspace }}
       ls
       
     
      
    - name: 'Publish Artifact: Artifact'
      uses: actions/upload-artifact@v2
      with:
        path: '${{ github.workspace }}\**'
        name: Build-Artifact
        
  
#     - name: Build QA
#       run: |
#          cd ${{ github.workspace }}\SDR-WebApp
#          ng build --configuration=qa
#          cd ${{ github.workspace }}\SDR-WebApp\dist\SDR-WebApp
#          ls
         
#     - name: 'Copy Files to: ${{ github.workspace }}/dev2'
#       run: |
#        cp '${{ github.workspace }}\SDR-WebApp\dist\SDR-WebApp\**' '${{ github.workspace }}\qa'
#        cd ${{ github.workspace }}\qa
#        ls
       
     
      
#     - name: 'Publish Artifact: Artifact'
#       uses: actions/upload-artifact@v2
#       with:
#         path: '${{ github.workspace }}\qa\**'
#         name: Build-Artifact-QA
